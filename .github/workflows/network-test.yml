name: Mini Network Tests

on: [pull_request]

env:
  RUST_BACKTRACE: 1
  SN_NODE_VERSION: "latest"
  RUSTFLAGS: "-D warnings"

jobs:
  network-test:
    # if: ${{ github.repository_owner == 'maidsafe' }}
    name: E2E against real network
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release
      - name: Setup Safe CLI
        run: |
          mkdir -p $HOME/.safe/cli
          cp ./target/release/safe $HOME/.safe/cli/
          echo "$HOME/.safe/cli" >> $GITHUB_PATH
          echo "$HOME/.safe/node" >> $GITHUB_PATH
          chmod +x $HOME/.safe/cli/safe
      - name: Test safe node install with specfic version
        run: |
          safe node install --version 0.10.0
          sn_node_version=$(sn_node --version | awk '{print $2}')
          if [[ "$sn_node_version" != "0.10.0" ]]; then
            echo "The `safe node install --version` command should install the correct version."
            echo "Expected version: 0.10.0"
            echo "Version reported by sn_node: $sn_node_version"
            exit 1
          fi
          # Clean this old version so that the next step installs the latest one
          # to be used in the rest of the tests.
          rm $HOME/.safe/node/sn_node
      - name: Test safe node install
        run: |
          safe node install
          # 'release view' without the optional --tag argument returns the latest version
          # the cut is stripping the 'v' from the beginning of the version number string
          latest_version=$( \
            gh release view --repo maidsafe/safe_network --json tagName | jq --raw-output .tagName | cut -c2-)
          sn_node_version=$(sn_node --version | awk '{print $2}')
          if [[ "$sn_node_version" == "$latest_version" ]]; then
            echo "The `safe node install` command has successfully installed the latest version of sn_node."
            echo "Latest release on Github: $latest_version"
            echo "Version reported by sn_node: $sn_node_version"
          else
            echo "The `safe node install` command should install the latest version of sn_node."
            echo "Latest release on Github: $latest_version"
            echo "Version reported by sn_node: $sn_node_version"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run network for tests
        run : safe node run-baby-fleming

      - name: Run CLI Tests
        if: false
        run: ./resources/test-scripts/cli-tests
        shell: bash

      - name: Stop the network on fail
        if: failure()
        run: safe node killall || true && safe auth stop || true

      - name: Failure logs
        if: failure()
        run: tail $HOME/.safe/node/baby-fleming-nodes/*/*.log
